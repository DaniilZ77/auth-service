services:
  backend:
    container_name: auth-backend
    restart: always
    build: .
    env_file:
      - .env
    ports:
      - 8081:8081
    networks:
      - auth-net
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started
  migrate:
    image: migrate/migrate
    container_name: auth-migrate
    env_file:
      - .env
    networks:
      - auth-net
    volumes:
      - ./internal/data:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:16.4-alpine
    container_name: auth-postgres
    restart: always
    env_file:
      - .env
    networks:
      - auth-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
volumes:
  postgres-data:

networks:
  auth-net:
    driver: bridge
